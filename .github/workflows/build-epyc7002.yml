name: Build i915 for DSM epyc7002

on:
  workflow_dispatch:
  push:
    tags:
      - "*-dsm-*"

jobs:
  build:
    strategy:
      matrix:
        version: [7.1, 7.2]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download toolchain
        run: |
          env_tarball=ds.epyc7002-${{ matrix.version }}.env.txz
          wget https://global.synologydownload.com/download/ToolChain/toolkit/${{ matrix.version }}/epyc7002/$env_tarball
          mkdir toolchain
          tar xf $env_tarball -C toolchain

      - name: Download kernel source
        run: |
          dev_tarball=ds.epyc7002-${{ matrix.version }}.dev.txz
          wget https://global.synologydownload.com/download/ToolChain/toolkit/${{ matrix.version }}/epyc7002/$dev_tarball
          mkdir ksrc
          tar xf $dev_tarball -C ksrc

      - name: Build
        run: |
          export BACKPORT_DIR=$PWD
          export KLIB_BUILD=$PWD/ksrc/usr/local/x86_64-pc-linux-gnu/x86_64-pc-linux-gnu/sys-root/usr/lib/modules/DSM-${{ matrix.version }}/build
          export CROSS_COMPILE=$PWD/toolchain/usr/local/x86_64-pc-linux-gnu/bin/x86_64-pc-linux-gnu-
          make defconfig-drm
          make -j$(nproc) modules_copy

      - name: Pack modules
        run: |
          echo "get firmware"
          SOURCE=/tmp/intel-gpu-firmware
          git clone https://github.com/intel-gpu/intel-gpu-firmware.git ${SOURCE}
          mv ${SOURCE}/firmware ${SOURCE}/i915  # for compatibility with intel's naming
          while read L; do
            if [ -e "${SOURCE}/${L}" ]; then
              mkdir -p "$(dirname out/firmware/${L})"
              cp "${SOURCE}/${L}" "out/firmware/${L}"
            else
              echo "Missing ${L}"
            fi
          done < <(find out/modules -name \*.ko -exec sh -c '/sbin/modinfo {} | grep ^firmware' \; | awk '{print $2}')

          echo "make install script"
          cat > out/install.sh <<"EOF"
          #!/bin/bash
          ROOTPATH="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"
          mkdir -p /usr/lib/firmware/i915
          cp -Rf ${ROOTPATH}/firmware/* /usr/lib/firmware
          cp -Rf ${ROOTPATH}/modules/* /usr/lib/modules
          depmod -a
          modprobe i915 enable_guc=2
          EOF

          echo "Pack"
          (cd out; zip -r ${{ github.workspace }}/i915_dsm-${{ matrix.version }}_epyc7002.zip ./install.sh ./firmware ./modules)

      - name: Save to artifacts
        uses: actions/upload-artifact@v3
        with:
          path: i915_dsm-${{ matrix.version }}_epyc7002.zip

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Append tag to filename
        working-directory: artifacts
        run: |
          find . -name "i915_dsm-*.zip" -print0 | while read -d $'\0' f; do
            mv $f ${f%.*}_${GITHUB_REF##*/}.zip
          done

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: versions
          files: artifacts/**/i915_dsm-*.zip
